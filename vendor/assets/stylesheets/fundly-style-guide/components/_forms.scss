label {
  font-size: inherit;
}

// Make multiple select elements height not fixed
select[multiple], select[size] {
  height: auto;
}

// Override content-box in Normalize (* isn't specific enough)
input[type="search"] {
  @include box-sizing(border-box);
}

// Fix optgroup Firefox bug per https://github.com/twbs/bootstrap/issues/7611
select optgroup {
  font-size: inherit;
  font-style: inherit;
  font-family: inherit;
}

input, textarea, select {
  width: 100%;
  padding: 0.5em 0.75em;
  font-size: inherit;
  line-height: 1.5em;
  background: white;
  border: 1px solid $f-color-medium;
  border-radius: 2px;
  box-shadow: inset 0 1px 1px rgba(0,0,0,0.125);
  outline: 0;
  vertical-align: middle;

  &:focus {
    background-color: darken(#fff, 2.5%);
  }

  // This includes a line-height hack to vertically center the placeholder text
  &::placeholder {
    padding: inherit 0;
    line-height: inherit;
    font-family: inherit;
    font-weight: inherit;
    text-transform: inherit;
  }
}

input, textarea {
  transition: all 0.3s linear;
}

select {
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  border-radius: 3px;
  cursor: pointer;
  position: relative;
  transition: background-color 150ms linear;
  background: {
    image: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" id="Layer_1" x="0px" y="0px" width="24px" height="16px" viewBox="0 0 24 16" enable-background="new 0 0 24 16" xml:space="preserve" xmlns:xml="http://www.w3.org/XML/1998/namespace"><polygon fill="#C0C8C9" points="12.333,5 7.794,10 3.254,5 "/></svg>');
    repeat: no-repeat;
    position: right center;
  }

  &:hover {
    background-image: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" id="Layer_1" x="0px" y="0px" width="24px" height="16px" viewBox="0 0 24 16" enable-background="new 0 0 24 16" xml:space="preserve" xmlns:xml="http://www.w3.org/XML/1998/namespace"><polygon fill="#444" points="12.333,5 7.794,10 3.254,5 "/></svg>');
  }
}

input[type='checkbox'], input[type='radio'] {
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  border-style: solid;
  border-width: 1px;
  box-shadow: none;
  width: 1em;
  height: 1em;
  position: relative;
  cursor: pointer;
  margin-top: auto;
  margin-bottom: auto;
}
input[type='checkbox'] {
  border-radius: 2px;
}
input[type='checkbox']:checked {
  background: $f-color-primary;
  border-color: $f-color-primary;

  &:after {
    position: absolute;
    top: 0;
    left: 0;
    content: $fa-var-check;
    font-family: FontAwesome;
    font-size: 0.7em;
    width: 100%;
    line-height: 1.4em;
    color: white;
    text-align: center;
  }
}

input[type='radio'] {
  border-radius: 100%;
}
input[type='radio']:checked {
  background: $f-color-swatch-four;
  border-color: darken($f-color-swatch-four, 5%);

  &:after {
    position: absolute;
    top: 25%;
    left: 25%;
    content: '';
    background: $f-color-white;
    width: 50%;
    height: 50%;
    border-radius: 100%;
  }
}

input[type='color'] {
  padding: 0.1em 0.2em;
  height: 2.5em;
  cursor: pointer;
}

.f-input-decorator {
  display: table;
  width: 100%;
  overflow: hidden;

  input {
    display: table-cell;
    width: 100%;
    border-radius: inherit;
  }

  input:first-child {
    border-top-right-radius: 0px;
    border-bottom-right-radius: 0px;
  }
  input:last-child {
    border-top-left-radius: 0px;
    border-bottom-left-radius: 0px;
  }
}

.f-decorator {
  display: table-cell;
  width: 1%;
  padding: 0 0.5em;
  font-size: inherit;
  line-height: inherit;
  text-align: center;
  border: {
    color: $f-color-medium;
    style: solid;
    width: 1px;
  }
  vertical-align: middle;
  border-radius: inherit;
  overflow: hidden;

  &.none {
    padding: 0;
  }
  &.small {
    padding: 0 0.25em;
  }
  &.medium {
    padding: 0 0.5em;
  }
  &.large {
    padding: 0 1em;
  }

  &:first-child {
    border-width: 1px 0 1px 1px;
    border-top-right-radius: 0px;
    border-bottom-right-radius: 0px;
  }
  &:last-child {
    border-width: 1px 1px 1px 0;
    border-top-left-radius: 0px;
    border-bottom-left-radius: 0px;
  }

  .f-button {
    border-radius: 0;
    border: none;
    white-space: nowrap;
  }

  input[type='color'] {
    border: none;
  }
}

.f-form-row {
  display: table;
  width: 100%;

  label {
    display: table-cell;
    width: 1%;
    white-space: nowrap;
  }
  label:first-child {
    padding-right: 1.5em;
  }
  label:last-child {
    padding-left: 1.5em;
  }

  input, textarea, select, .f-input-decorator {
    display: table-cell;
    width: 100%;
  }

  &.stacked {
    label {
      display: block;
      padding-right: 0;
      padding-left: 0;
    }

    input, textarea, select, .f-input-decorator {
      display: block;
    }
  }
}
